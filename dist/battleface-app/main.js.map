{"version":3,"sources":["./src/app/services/auth/auth.guard.ts","./src/app/services/auth/auth.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/quotation/quotation.service.ts","./src/app/form/form.component.ts","./src/app/form/form.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService\n  ) {}\n\n  canActivate(): boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n    \n}","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Credentials } from '../../models/credential';\nimport { LoggedIn } from '../../models/loggedIn';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user: LoggedIn = {\n    loggedIn: false,\n    token: \"\"\n  };\n  private login_url = \"http://localhost:3300/login\";\n\n  constructor(\n    private router: Router,\n    private http: HttpClient\n  ) {}\n\n  login(credentials: Credentials) {\n    const body = {\n      username: credentials.username,\n      password: credentials.password\n    }\n    return this.http.post<LoggedIn>(this.login_url, body)\n      .subscribe((res: LoggedIn) => {\n        this.user = res;\n        this.router.navigate(['quotation']);\n      })\n  }\n  \n  isLoggedIn() {\n    return this.user.loggedIn;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormComponent } from './form/form.component';\nimport {FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    FormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { QuoteForm } from '../../models/quoteForm';\nimport { AuthService } from '../auth/auth.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuotationService {\n  private quotation_url = \"http://localhost:3300/quotation\";\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService\n  ) { }\n\n  quote(form: QuoteForm) {\n    const auth_token = this.authService.user.token;\n    const headers = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: `Bearer ${auth_token}`\n      })\n    };\n    return this.http.post(this.quotation_url, form, headers)\n      .pipe(\n        map(res => {\n          return res;\n        }),\n        catchError(error => {\n          return [error.error];\n        })\n      );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { QuotationService } from '../services/quotation/quotation.service';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n  form = new FormGroup({\n    age: new FormControl('', [Validators.required]),\n    currency_id: new FormControl('', [Validators.required]),\n    start_date: new FormControl('', [Validators.required]),\n    end_date: new FormControl('', [Validators.required])\n  });\n  quote: Observable<any>;\n  \n  constructor(\n    private quotationService: QuotationService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.quote = this.quotationService.quote(this.form.value);\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div>\n        <label for=\"Age\">Age(s): </label>\n        <input id=\"age\" type=\"text\" formControlName=\"age\">\n        <div *ngIf=\"form.controls.age.touched && form.controls.age.errors?.required\" class=\"warning\">\n            Age(s) are required and should be comma separated.\n        </div>\n    </div>\n\n    <div>\n        <label for=\"currency_id\">Currency: </label>\n        <input id=\"currency_id\" type=\"text\" formControlName=\"currency_id\">\n        <div *ngIf=\"form.controls.currency_id.touched && form.controls.currency_id.errors?.required\" class=\"warning\">\n            Currency is required.\n        </div>\n    </div>\n\n    <div>\n        <label for=\"start_date\">Start Date: </label>\n        <input id=\"start_date\" type=\"date\" formControlName=\"start_date\">\n        <div *ngIf=\"form.controls.start_date.touched && form.controls.start_date.errors?.required\" class=\"warning\">\n            Start date is required.\n        </div>\n    </div>\n\n    <div>\n        <label for=\"end_date\">End Date: </label>\n        <input id=\"end_date\" type=\"date\" data-date-format=\"YYYY-MM-DD\" formControlName=\"end_date\">\n        <div *ngIf=\"form.controls.end_date.touched && form.controls.end_date.errors?.required\" class=\"warning\">\n            End Date is required.\n        </div>\n    </div>\n \n    <div>\n        <button type=\"submit\" [disabled]= !form.valid>Submit</button>\n    </div>\n  </form>\n\n  <div>\n      <p>Total: ${{(quote | async)?.total}}</p>\n      <p>Currency: {{(quote | async)?.currency_id}}</p>\n      <p>Quote Id: {{(quote | async)?.quotation_id}}</p>\n      <p>Error: {{(quote | async)?.error}}</p>\n  </div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './services/auth/auth.guard';\nimport { LoginComponent } from './login/login.component';\nimport { FormComponent } from './form/form.component';\nconst routes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'quotation', component: FormComponent, canActivate: [AuthGuard]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  userForm = new FormGroup({\n    username: new FormControl('', [Validators.required, Validators.minLength(6)]),\n    password: new FormControl('', [Validators.required, Validators.minLength(6)])\n  })\n  \n  constructor(\n    private authService: AuthService\n    \n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.authService.login(this.userForm.value);\n  }\n}\n","<form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n        <label for=\"username\">Username: </label>\n        <input id=\"username\" type=\"text\" formControlName=\"username\">\n        <div *ngIf=\"userForm.controls.username.touched && userForm.controls.username.errors?.required\" class=\"warning\"> \n            Username is required.\n        </div>\n        <div *ngIf=\"userForm.controls.username.touched && userForm.controls.username.errors?.minlength\" class=\"warning\">\n            Username must be at least 6 characters.\n        </div>\n    </div>\n  <div>\n    <label for=\"password\">Password: </label>\n    <input id=\"password\" type=\"password\" formControlName=\"password\">\n    <div *ngIf=\"userForm.controls.password.touched && userForm.controls.password.errors?.required\" class=\"warning\">\n        Password is required.\n    </div>\n    <div *ngIf=\"userForm.controls.password.touched && userForm.controls.password.errors?.minlength\" class=\"warning\">\n        Password must be at least 6 characters.\n    </div>\n  </div>\n    <div>\n        <button type=\"submit\" [disabled]= !userForm.valid>Submit</button>\n    </div>\n  </form>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}